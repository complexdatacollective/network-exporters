{"version":3,"file":"index.js","sources":["../../src/FileExportManager.js","../../src/consts/reservedAttributes.js"],"sourcesContent":["/* eslint-disable global-require */\nconst { merge, isEmpty, groupBy } = require('lodash');\nconst sanitizeFilename = require('sanitize-filename');\nconst { EventEmitter } = require('eventemitter3');\nconst queue = require('async/queue');\nconst {\n  protocolProperty,\n} = require('./consts/reservedAttributes');\nconst {\n  removeDirectory,\n  makeTempDir,\n} = require('./utils/filesystem');\nconst exportFile = require('./exportFile');\nconst {\n  insertEgoIntoSessionNetworks,\n  resequenceIds,\n  partitionNetworkByType,\n  unionOfNetworks,\n} = require('./formatters/network');\nconst {\n  verifySessionVariables,\n  getFilePrefix,\n  sleep,\n  handlePlatformSaveDialog,\n  ObservableValue,\n} = require('./utils/general');\nconst archive = require('./utils/archive');\nconst { ExportError, ErrorMessages } = require('./errors/ExportError');\nconst ProgressMessages = require('./ProgressMessages');\nconst UserCancelledExport = require('./errors/UserCancelledExport');\nconst { isElectron } = require('./utils/Environment');\n\nconst defaultCSVOptions = {\n  adjacencyMatrix: false,\n  attributeList: true,\n  edgeList: true,\n  // If CSV is exported, egoAttributeList must be exported\n  // as it contains session info so this option is generally\n  // ignored and only relevant for *only* exporting\n  // egoAttributeList\n  egoAttributeList: true,\n};\n\nconst defaultExportOptions = {\n  exportGraphML: true,\n  exportCSV: defaultCSVOptions,\n  globalOptions: {\n    exportFilename: 'networkCanvasExport',\n    unifyNetworks: false,\n    useDirectedEdges: false, // TODO\n    useScreenLayoutCoordinates: true,\n    screenLayoutHeight: 1080,\n    screenLayoutWidth: 1920,\n  },\n};\n\n// Merge default and user-supplied options\nconst getOptions = (exportOptions) => ({\n  ...merge(defaultExportOptions, exportOptions),\n  ...(exportOptions.exportCSV === true ? { exportCSV: defaultCSVOptions } : {}),\n});\n\n/**\n * Interface for all data exports\n */\nclass FileExportManager {\n  constructor(exportOptions = {}) {\n    this.exportOptions = getOptions(exportOptions);\n    this.events = new EventEmitter();\n  }\n\n  on = (...args) => {\n    this.events.on(...args);\n  }\n\n  emit(event, payload) {\n    if (!event) {\n      // eslint-disable-next-line no-console\n      console.warn('Malformed emit.');\n      return;\n    }\n\n    this.events.emit(event, payload);\n  }\n\n  removeAllListeners = () => {\n    this.events.removeAllListeners();\n  }\n\n  /**\n   * Main export method. Returns a promise that resolves an to an object\n   * containing an object with run() and abort() methods that control the task.\n   *\n   * Rejections from this method are fatal errors, but errors within\n   * the run() task only fail that specific task.\n   *\n   * @param {*} sessions    collection of session objects\n   * @param {*} protocols   object keyed by protocolUID (SHA of protocol.name), where each\n   *                        protocols[protocolUID] is a complete protocol object,\n   *                        including codebook. Must contain a key for every session\n   *                        protocol in the sessions collection.\n   */\n  exportSessions(sessions, protocols) {\n    let tmpDir; // will hold temporary directory location\n\n    // This queue instance accepts one or more promises and limits their\n    // concurrency for better usability in consuming apps\n    // https://caolan.github.io/async/v3/docs.html#queue\n\n    // Set concurrency to conservative values for now, based on platform\n    const QUEUE_CONCURRENCY = isElectron() ? 50 : 1;\n\n    const q = queue((task, callback) => {\n      task()\n        .then((result) => callback(null, result))\n        .catch((error) => callback(error));\n    }, QUEUE_CONCURRENCY);\n\n    const exportFormats = [\n      ...(this.exportOptions.exportGraphML ? ['graphml'] : []),\n      ...(this.exportOptions.exportCSV ? ['ego'] : []),\n      ...(this.exportOptions.exportCSV.adjacencyMatrix ? ['adjacencyMatrix'] : []),\n      ...(this.exportOptions.exportCSV.attributeList ? ['attributeList'] : []),\n      ...(this.exportOptions.exportCSV.edgeList ? ['edgeList'] : []),\n    ];\n\n    // Cleanup function called by abort method, after fatal errors, and after\n    // the export promise resolves.\n    const cleanUp = () => {\n      q.kill();\n      if (tmpDir) {\n        try {\n          removeDirectory(tmpDir);\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.error('Error removing temp directory:', error);\n        }\n      }\n    };\n\n    this.emit('begin', ProgressMessages.Begin);\n\n    // Reject if required parameters aren't provided\n    if (\n      (!sessions && !isEmpty(sessions))\n      || (!protocols && !isEmpty(protocols))\n    ) {\n      return Promise.reject(new ExportError(ErrorMessages.MissingParameters));\n    }\n\n    // Will resolve with an object containing run() and abort() methods\n    return new Promise((resolveExportPromise) => {\n      // State variables for this export\n      let cancelled = false;\n      const succeeded = [];\n      const failed = [];\n\n      const consideringCancel = new ObservableValue(false);\n\n      const shouldContinue = () => !cancelled;\n\n      // Main work of the process happens here\n      const run = () => new Promise((resolveRun, rejectRun) => {\n        makeTempDir().then((dir) => { tmpDir = dir; })\n          // Short delay to give consumer UI time to render\n          .then(sleep(1000))\n          .then(() => {\n            if (!shouldContinue()) {\n              throw new UserCancelledExport();\n            }\n          })\n          // Insert a reference to the ego ID into all nodes and edges\n          .then(() => {\n            this.emit('update', ProgressMessages.Formatting);\n            // Insert a reference to the ego ID into all nodes and edges\n            return insertEgoIntoSessionNetworks(sessions);\n          })\n          // Resequence IDs for this export\n          .then((sessionsWithEgo) => resequenceIds(sessionsWithEgo))\n          // Group sessions by protocol UUID\n          .then((sessionsWithResequencedIDs) => groupBy(sessionsWithResequencedIDs, `sessionVariables.${protocolProperty}`))\n          // Then, process the union option\n          .then((sessionsByProtocol) => {\n            if (!shouldContinue()) {\n              throw new UserCancelledExport();\n            }\n\n            if (!this.exportOptions.globalOptions.unifyNetworks) {\n              return sessionsByProtocol;\n            }\n\n            this.emit('update', ProgressMessages.Merging);\n            return unionOfNetworks(sessionsByProtocol);\n          })\n          .then((unifiedSessions) => {\n            if (!shouldContinue()) {\n              throw new UserCancelledExport();\n            }\n\n            const promisedExports = [];\n\n            // Create an array of promises representing each session in each export format\n            const finishedSessions = [];\n            const sessionExportTotal = this.exportOptions.globalOptions.unifyNetworks\n              ? Object.keys(unifiedSessions).length : sessions.length;\n\n            Object.keys(unifiedSessions).forEach((protocolUID) => {\n              // Reject if no protocol was provided for this session\n              if (!protocols[protocolUID]) {\n                const error = `No protocol was provided for the session. Looked for protocolUID ${protocolUID}`;\n                this.emit('error', error);\n                failed.push(error);\n                return;\n              }\n\n              unifiedSessions[protocolUID].forEach((session) => {\n                // Skip if sessions don't have required sessionVariables\n                try {\n                  if (this.exportOptions.globalOptions.unifyNetworks) {\n                    Object.values(session.sessionVariables)\n                      .forEach((sessionVariables) => {\n                        verifySessionVariables(sessionVariables);\n                      });\n                  } else {\n                    verifySessionVariables(session.sessionVariables);\n                  }\n                } catch (e) {\n                  failed.push(e);\n                  return;\n                }\n\n                const protocol = protocols[protocolUID];\n                const prefix = getFilePrefix(\n                  session,\n                  protocol,\n                  this.exportOptions.globalOptions.unifyNetworks,\n                );\n\n                // Returns promise resolving to filePath for each format exported\n                exportFormats.forEach((format) => {\n                  // Partitioning the network based on node and edge type so we can create\n                  // an individual export file for each type\n                  const partitionedNetworks = partitionNetworkByType(\n                    protocol.codebook,\n                    session,\n                    format,\n                  );\n\n                  partitionedNetworks.forEach((partitionedNetwork) => {\n                    const partitionedEntity = partitionedNetwork.partitionEntity;\n                    promisedExports.push(() => new Promise((resolve, reject) => {\n                      try {\n                        exportFile(\n                          prefix,\n                          partitionedEntity,\n                          format,\n                          tmpDir,\n                          partitionedNetwork,\n                          protocol.codebook,\n                          this.exportOptions,\n                        ).then((result) => {\n                          if (!finishedSessions.includes(prefix)) {\n                            // If we unified the networks, we need to iterate sessionVariables and\n                            // emit a 'session-exported' event for each sessionID\n                            if (this.exportOptions.globalOptions.unifyNetworks) {\n                              Object.values(session.sessionVariables)\n                                .forEach((sessionVariables) => {\n                                  this.emit('session-exported', sessionVariables.sessionId);\n                                });\n                            } else {\n                              this.emit('session-exported', session.sessionVariables.sessionId);\n                            }\n\n                            this.emit('update', ProgressMessages.ExportSession(finishedSessions.length + 1, sessionExportTotal));\n                            finishedSessions.push(prefix);\n                          }\n                          resolve(result);\n                        }).catch((e) => reject(e));\n                      } catch (error) {\n                        this.emit('error', `Encoding ${prefix} failed: ${error.message}`);\n                        this.emit('update', ProgressMessages.ExportSession(finishedSessions.length + 1, sessionExportTotal));\n                        reject(error);\n                      }\n                    }));\n                  });\n                });\n              });\n            });\n\n            q.push(promisedExports, (err, result) => {\n              if (err) {\n                failed.push(err);\n                return;\n              }\n              succeeded.push(result);\n            });\n\n            return new Promise((resolve, reject) => q.drain()\n              .then(() => resolve({ exportedPaths: succeeded, failedExports: failed }))\n              .catch(reject));\n          })\n          // Then, Zip the result.\n          .then(({ exportedPaths, failedExports }) => {\n            if (!shouldContinue()) {\n              throw new UserCancelledExport();\n            }\n\n            // FatalError if there are no sessions to encode and no errors\n            if (exportedPaths.length === 0 && failedExports.length === 0) {\n              throw new ExportError(ErrorMessages.NothingToExport);\n            }\n\n            // If we have no files to encode (but we do have errors), finish\n            // the task here so the user can see the errors\n            if (exportedPaths.length === 0) {\n              this.emit('finished', ProgressMessages.Finished);\n              cleanUp();\n              resolveRun();\n              cancelled = true;\n              return Promise.resolve();\n            }\n\n            const emitZipProgress = (percent) => this.emit('update', ProgressMessages.ZipProgress(percent));\n\n            // Start the zip process, and attach a callback to the update\n            // progress event.\n            this.emit('update', ProgressMessages.ZipStart);\n            return archive(\n              exportedPaths,\n              tmpDir,\n              sanitizeFilename(this.exportOptions.globalOptions.exportFilename),\n              emitZipProgress,\n              shouldContinue,\n            );\n          })\n          .then((zipLocation) => {\n            if (!shouldContinue()) {\n              throw new UserCancelledExport();\n            }\n\n            this.emit('update', ProgressMessages.Saving);\n            return zipLocation;\n          })\n          .then((zipLocation) => {\n            if (!shouldContinue()) {\n              throw new UserCancelledExport();\n            }\n\n            // If the user is considering aborting, don't show the save dialog\n            const waitWhileConsideringAbort = () => new Promise((resolve, reject) => {\n              const resolveWhenReady = (value) => {\n                if (!shouldContinue()) { reject(); }\n                if (value === false) { resolve(); }\n              };\n\n              // Attach a value change listener to our ObservableProperty\n              consideringCancel.registerListener(resolveWhenReady);\n\n              // Call test once on first run\n              resolveWhenReady(consideringCancel.value);\n            });\n\n            return waitWhileConsideringAbort().then(() => handlePlatformSaveDialog(\n              zipLocation,\n              sanitizeFilename(this.exportOptions.globalOptions.exportFilename),\n            ));\n          })\n          .then((saveCancelled) => {\n            if (!shouldContinue()) {\n              throw new UserCancelledExport();\n            }\n\n            if (!saveCancelled) {\n              this.emit('finished', ProgressMessages.Finished);\n            }\n\n            cleanUp();\n            resolveRun();\n          })\n          .catch((err) => {\n            cleanUp();\n            // We don't reject if this is an error from user cancelling\n            if (!(err instanceof UserCancelledExport)) {\n              this.emit('cancelled', ProgressMessages.Cancelled);\n              rejectRun(err);\n            }\n          });\n      }); // End run()\n\n      const abort = () => {\n        // eslint-disable-next-line no-console\n        console.info('Aborting file export.');\n        if (!shouldContinue()) {\n          // eslint-disable-next-line no-console\n          console.warn('This export already aborted. Cancelling abort!');\n          return;\n        }\n        cancelled = true;\n      };\n\n      const setConsideringAbort = (value) => {\n        consideringCancel.value = value;\n      };\n\n      resolveExportPromise({ run, abort, setConsideringAbort });\n    });\n  }\n}\n\nmodule.exports = FileExportManager;\n","// Model properties\nconst entityPrimaryKeyProperty = '_uid';\nconst entityAttributesProperty = 'attributes';\nconst edgeSourceProperty = 'from';\nconst edgeTargetProperty = 'to';\n\n// Session variable properties\nconst caseProperty = 'caseId';\nconst sessionProperty = 'sessionId';\nconst protocolProperty = 'protocolUID';\nconst protocolName = 'protocolName';\nconst sessionStartTimeProperty = 'sessionStart';\nconst sessionFinishTimeProperty = 'sessionFinish';\nconst sessionExportTimeProperty = 'sessionExported';\nconst codebookHashProperty = 'codebookHash';\n\n// Export properties\nconst nodeExportIDProperty = 'nodeID'; // Incrementing ID number for nodes\nconst edgeExportIDProperty = 'edgeID'; // Incrementing ID number for edges\nconst egoProperty = 'networkCanvasEgoUUID';\nconst ncTypeProperty = 'networkCanvasType';\nconst ncProtocolNameProperty = 'networkCanvasProtocolName';\nconst ncCaseProperty = 'networkCanvasCaseID';\nconst ncSessionProperty = 'networkCanvasSessionID';\nconst ncUUIDProperty = 'networkCanvasUUID';\nconst ncSourceUUID = 'networkCanvasSourceUUID';\nconst ncTargetUUID = 'networkCanvasTargetUUID';\n\nmodule.exports = {\n  caseProperty,\n  edgeSourceProperty,\n  edgeTargetProperty,\n  egoProperty,\n  entityAttributesProperty,\n  entityPrimaryKeyProperty,\n  nodeExportIDProperty,\n  edgeExportIDProperty,\n  ncCaseProperty,\n  ncProtocolNameProperty,\n  ncSessionProperty,\n  ncSourceUUID,\n  ncTargetUUID,\n  ncTypeProperty,\n  ncUUIDProperty,\n  protocolName,\n  protocolProperty,\n  sessionExportTimeProperty,\n  sessionFinishTimeProperty,\n  sessionProperty,\n  sessionStartTimeProperty,\n  codebookHashProperty,\n};\n"],"names":["protocolProperty"],"mappings":"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"}